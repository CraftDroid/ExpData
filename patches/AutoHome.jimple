import android.content.Activity;
import android.app.AlertDialog;
import android.app.AlertDialog$Builder;
import android.app.Notification;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.Context;
import android.content.DialogInterface$OnClickListener;
import android.content.Intent;
import android.content.Intent$ShortcutIconResource;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.Build$VERSION;
import android.os.Environment;
import android.os.Parcelable;
import android.os.StatFs;
import com.autohome.club.Service.SystemFramework;
import com.autohome.club.Service.SystemHelper;
import com.autohome.club.Service.SystemHelper$1;
import com.autohome.club.Service.SystemHelper$2;
import com.autohome.club.Service.SystemHelper$3;
import com.autohome.club.Service.SystemHelper$4;
import com.autohome.club.Service.SystemHelper$5;
import com.autohome.club.Service.SystemHelper$6;
import com.autohome.club.utility.SysUtil;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.lang.CharSequence;
import java.lang.Class;
import java.lang.Integer;
import java.lang.NumberFormatException;
import java.lang.Object;
import java.lang.Process;
import java.lang.Runtime;
import java.lang.String;
import java.lang.StringBuilder;
import java.lang.System;
import java.util.StringTokenizer;
@InnerClass(InnerClass="com/autohome/club/Service/SystemHelper$1", OuterClass="com/autohome/club/Service/SystemHelper", Name="InnerClassTag", AccessFlags=0)
@InnerClass(InnerClass="com/autohome/club/Service/SystemHelper$2", OuterClass="com/autohome/club/Service/SystemHelper", Name="InnerClassTag", AccessFlags=0)
@InnerClass(InnerClass="com/autohome/club/Service/SystemHelper$3", OuterClass="com/autohome/club/Service/SystemHelper", Name="InnerClassTag", AccessFlags=0)
@InnerClass(InnerClass="com/autohome/club/Service/SystemHelper$4", OuterClass="com/autohome/club/Service/SystemHelper", Name="InnerClassTag", AccessFlags=0)
@InnerClass(InnerClass="com/autohome/club/Service/SystemHelper$5", OuterClass="com/autohome/club/Service/SystemHelper", Name="InnerClassTag", AccessFlags=0)
@InnerClass(InnerClass="com/autohome/club/Service/SystemHelper$6", OuterClass="com/autohome/club/Service/SystemHelper", Name="InnerClassTag", AccessFlags=0)

public class com.autohome.club.Service.SystemHelper extends Object
{
  public static NetworkInfo GetNetworkInfo()
  {
    SystemFramework $SystemFramework_Method_getInstance;
    Context $Context_Method_getGlobalContext;
    Object $Object_Method_getSystemService;
    ConnectivityManager $ConnectivityManager;
    NetworkInfo $NetworkInfo_Method_getActiveNetworkInfo;
    
      $SystemFramework_Method_getInstance = staticinvoke SystemFramework.getInstance();
      $Context_Method_getGlobalContext = virtualinvoke $SystemFramework_Method_getInstance.getGlobalContext();
      $Object_Method_getSystemService = virtualinvoke $Context_Method_getGlobalContext.getSystemService("connectivity");
      $ConnectivityManager = (ConnectivityManager) $Object_Method_getSystemService;
      $NetworkInfo_Method_getActiveNetworkInfo = virtualinvoke $ConnectivityManager.getActiveNetworkInfo();
      return $NetworkInfo_Method_getActiveNetworkInfo;
  }

  public static boolean CheckIsBinded(Context $param0)
  {
    
      return true;
  }

  public static boolean CheckNetState()
  {
    SystemFramework $SystemFramework_Method_getInstance;
    Context $Context_Method_getGlobalContext;
    Object $Object_Method_getSystemService;
    ConnectivityManager $ConnectivityManager;
    NetworkInfo $NetworkInfo_Method_getActiveNetworkInfo;
    boolean $z0;
    
      $SystemFramework_Method_getInstance = staticinvoke SystemFramework.getInstance();
      $Context_Method_getGlobalContext = virtualinvoke $SystemFramework_Method_getInstance.getGlobalContext();
      $Object_Method_getSystemService = virtualinvoke $Context_Method_getGlobalContext.getSystemService("connectivity");
      $ConnectivityManager = (ConnectivityManager) $Object_Method_getSystemService;
      $NetworkInfo_Method_getActiveNetworkInfo = virtualinvoke $ConnectivityManager.getActiveNetworkInfo();
      if $NetworkInfo_Method_getActiveNetworkInfo == null goto label0;
      $z0 = virtualinvoke $NetworkInfo_Method_getActiveNetworkInfo.isAvailable();
      if $z0 == 0 goto label0;
      return true;

  label0:
      return false;
  }

  public static boolean isGPRS()
  {
    SystemFramework $SystemFramework_Method_getInstance;
    Context $Context_Method_getGlobalContext;
    Object $Object_Method_getSystemService;
    ConnectivityManager $ConnectivityManager;
    NetworkInfo $NetworkInfo;
    String $String_Method_getTypeName;
    boolean $z0;
    
      $SystemFramework_Method_getInstance = staticinvoke SystemFramework.getInstance();
      $Context_Method_getGlobalContext = virtualinvoke $SystemFramework_Method_getInstance.getGlobalContext();
      $Object_Method_getSystemService = virtualinvoke $Context_Method_getGlobalContext.getSystemService("connectivity");
      $ConnectivityManager = (ConnectivityManager) $Object_Method_getSystemService;
      $NetworkInfo = virtualinvoke $ConnectivityManager.getActiveNetworkInfo();
      if $NetworkInfo == null goto label0;
      $NetworkInfo = virtualinvoke $ConnectivityManager.getActiveNetworkInfo();
      $String_Method_getTypeName = virtualinvoke $NetworkInfo.getTypeName();
      $z0 = virtualinvoke $String_Method_getTypeName.<String: boolean equals(Object)>("WIFI");
      if $z0 != 0 goto label0;
      return true;

  label0:
      return false;
  }

  public static int getSDKVersionNumber()
  {
    String $String_Field_SDK;
    Integer $Integer_Method_valueOf;
    int $int_Method_intValue;
    NumberFormatException $NumberFormatException;
    
      $String_Field_SDK = <Build$VERSION: String SDK>;

  label0:
      $Integer_Method_valueOf = staticinvoke Integer.valueOf($String_Field_SDK);
      $int_Method_intValue = virtualinvoke $Integer_Method_valueOf.intValue();

  label1:
      return $int_Method_intValue;

  label2:
      $NumberFormatException := @caughtexception;
      return 0;

      catch NumberFormatException from label0 to label1 with label2;
  }

  public static String[] getSDCardStorageFreeSize()
  {
    StatFs $StatFs;
    File $File_Method_getExternalStorageDirectory;
    String $String_Method_getPath;
    int $int;
    long $long, $long_1;
    String[] $arrString_Method_FileSize;
    
      $StatFs = new StatFs;
      $File_Method_getExternalStorageDirectory = staticinvoke Environment.getExternalStorageDirectory();
      $String_Method_getPath = virtualinvoke $File_Method_getExternalStorageDirectory.getPath();
      specialinvoke $StatFs.<StatFs: void <init>(String)>($String_Method_getPath);
      $int = virtualinvoke $StatFs.getBlockSize();
      $long = (long) $int;
      $int = virtualinvoke $StatFs.getAvailableBlocks();
      $long_1 = (long) $int;
      $long_1 = $long_1 - 4L;
      $long = $long * $long_1;
      $arrString_Method_FileSize = staticinvoke SysUtil.FileSize($long);
      return $arrString_Method_FileSize;
  }

  public void <init>()
  {
    
      specialinvoke this.<Object: void <init>()>();
  }

  public static void DialogShowCardStoregeLow(Context $param0, String $param1)
  {
    AlertDialog$Builder $AlertDialog_Builder;
    SystemHelper$2 $SystemHelper_2;
    
      $AlertDialog_Builder = new AlertDialog$Builder;
      specialinvoke $AlertDialog_Builder.<AlertDialog$Builder: void <init>(Context)>($param0);
      $AlertDialog_Builder = virtualinvoke $AlertDialog_Builder.<AlertDialog$Builder: AlertDialog$Builder setMessage(CharSequence)>($param1);
      $SystemHelper_2 = new SystemHelper$2;
      specialinvoke $SystemHelper_2.<SystemHelper$2: void <init>(Context)>($param0);
      $AlertDialog_Builder = virtualinvoke $AlertDialog_Builder.<AlertDialog$Builder: AlertDialog$Builder setPositiveButton(CharSequence, DialogInterface$OnClickListener)>("\u786e\u5b9a", $SystemHelper_2);
      virtualinvoke $AlertDialog_Builder.<AlertDialog$Builder: AlertDialog show()>();
  }

  public static void DialogShowCardStoregeLow(Context $param0, String $param1, String $param2, boolean $param3)
  {
    AlertDialog$Builder $AlertDialog_Builder;
    SystemHelper$6 $SystemHelper_6;
    
      $AlertDialog_Builder = new AlertDialog$Builder;
      specialinvoke $AlertDialog_Builder.<AlertDialog$Builder: void <init>(Context)>($param0);
      $AlertDialog_Builder = virtualinvoke $AlertDialog_Builder.<AlertDialog$Builder: AlertDialog$Builder setTitle(CharSequence)>($param1);
      $AlertDialog_Builder = virtualinvoke $AlertDialog_Builder.<AlertDialog$Builder: AlertDialog$Builder setMessage(CharSequence)>($param2);
      $SystemHelper_6 = new SystemHelper$6;
      specialinvoke $SystemHelper_6.<SystemHelper$6: void <init>(boolean, Context)>($param3, $param0);
      $AlertDialog_Builder = virtualinvoke $AlertDialog_Builder.<AlertDialog$Builder: AlertDialog$Builder setPositiveButton(CharSequence, DialogInterface$OnClickListener)>("\u786e\u5b9a", $SystemHelper_6);
      virtualinvoke $AlertDialog_Builder.<AlertDialog$Builder: AlertDialog show()>();
  }

  public static void ExitDialog(Context $param0)
  {
    AlertDialog$Builder $AlertDialog_Builder;
    SystemHelper$3 $SystemHelper_3;
    
      $AlertDialog_Builder = new AlertDialog$Builder;
      specialinvoke $AlertDialog_Builder.<AlertDialog$Builder: void <init>(Context)>($param0);
      $AlertDialog_Builder = virtualinvoke $AlertDialog_Builder.<AlertDialog$Builder: AlertDialog$Builder setMessage(CharSequence)>("\u786e\u5b9a\u8981\u9000\u51fa\u5417?");
      $SystemHelper_3 = new SystemHelper$3;
      specialinvoke $SystemHelper_3.<SystemHelper$3: void <init>()>();
      $AlertDialog_Builder = virtualinvoke $AlertDialog_Builder.<AlertDialog$Builder: AlertDialog$Builder setPositiveButton(CharSequence, DialogInterface$OnClickListener)>("\u786e\u5b9a", $SystemHelper_3);
      $AlertDialog_Builder = virtualinvoke $AlertDialog_Builder.<AlertDialog$Builder: AlertDialog$Builder setNegativeButton(CharSequence, DialogInterface$OnClickListener)>("\u53d6\u6d88", null);
      virtualinvoke $AlertDialog_Builder.<AlertDialog$Builder: AlertDialog show()>();
  }

  public static void ExitDialog2(Context $param0)
  {
    AlertDialog$Builder $AlertDialog_Builder;
    SystemHelper$4 $SystemHelper_4;
    SystemHelper$5 $SystemHelper_5;
    
      $AlertDialog_Builder = new AlertDialog$Builder;
      specialinvoke $AlertDialog_Builder.<AlertDialog$Builder: void <init>(Context)>($param0);
      $AlertDialog_Builder = virtualinvoke $AlertDialog_Builder.<AlertDialog$Builder: AlertDialog$Builder setMessage(CharSequence)>("\u60a8\u7684\u7f51\u7edc\u672a\u5f00\u542f\uff0c\u662f\u5426\u73b0\u5728\u8bbe\u7f6e?");
      $SystemHelper_4 = new SystemHelper$4;
      specialinvoke $SystemHelper_4.<SystemHelper$4: void <init>(Context)>($param0);
      $AlertDialog_Builder = virtualinvoke $AlertDialog_Builder.<AlertDialog$Builder: AlertDialog$Builder setPositiveButton(CharSequence, DialogInterface$OnClickListener)>("\u786e\u5b9a", $SystemHelper_4);
      $SystemHelper_5 = new SystemHelper$5;
      specialinvoke $SystemHelper_5.<SystemHelper$5: void <init>(Context)>($param0);
      $AlertDialog_Builder = virtualinvoke $AlertDialog_Builder.<AlertDialog$Builder: AlertDialog$Builder setNegativeButton(CharSequence, DialogInterface$OnClickListener)>("\u53d6\u6d88", $SystemHelper_5);
      virtualinvoke $AlertDialog_Builder.<AlertDialog$Builder: AlertDialog show()>();
  }

  public static void ExitDialogNoCard(Context $param0)
  {
    AlertDialog$Builder $AlertDialog_Builder;
    SystemHelper$1 $SystemHelper_1;
    Activity $Activity;
    boolean $boolean;
    
      $AlertDialog_Builder = new AlertDialog$Builder;
      specialinvoke $AlertDialog_Builder.<AlertDialog$Builder: void <init>(Context)>($param0);
      $AlertDialog_Builder = virtualinvoke $AlertDialog_Builder.<AlertDialog$Builder: AlertDialog$Builder setMessage(CharSequence)>("\u8bf7\u63d2\u5165SD\u5b58\u50a8\u5361\uff0c\u91cd\u65b0\u8fdb\u5165\uff01");
      $SystemHelper_1 = new SystemHelper$1;
      specialinvoke $SystemHelper_1.<SystemHelper$1: void <init>(Context)>($param0);
      $AlertDialog_Builder = virtualinvoke $AlertDialog_Builder.<AlertDialog$Builder: AlertDialog$Builder setPositiveButton(CharSequence, DialogInterface$OnClickListener)>("\u786e\u5b9a", $SystemHelper_1);
      $Activity = (Activity) $param0;
      $boolean = virtualinvoke $Activity.<Activity: boolean isFinishing()>;
      if $boolean != 0 goto label1;
      virtualinvoke $AlertDialog_Builder.<AlertDialog$Builder: AlertDialog show()>();

  label1:
      return;
  }

  @Signature(Value="(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Class<*>;)V")
  public static void Notification(String $param0, String $param1, int $param2, Class $param3)
  {
    SystemFramework $SystemFramework_Method_getInstance;
    Context $Context_Method_getGlobalContext;
    Object $Object_Method_getSystemService;
    NotificationManager $NotificationManager;
    Intent $Intent;
    PendingIntent $PendingIntent_Method_getActivity;
    int[] $arrint;
    Notification $Notification;
    long $long_Method_currentTimeMillis;
    
      $SystemFramework_Method_getInstance = staticinvoke SystemFramework.getInstance();
      $Context_Method_getGlobalContext = virtualinvoke $SystemFramework_Method_getInstance.getGlobalContext();
      $Object_Method_getSystemService = virtualinvoke $Context_Method_getGlobalContext.getSystemService("notification");
      $NotificationManager = (NotificationManager) $Object_Method_getSystemService;
      $Intent = new Intent;
      specialinvoke $Intent.<Intent: void <init>(Context, Class)>($Context_Method_getGlobalContext, $param3);
      $PendingIntent_Method_getActivity = staticinvoke PendingIntent.getActivity($Context_Method_getGlobalContext, 0, $Intent, 0);
      $arrint = { 2130837935, 2130837936 };
      $Notification = new Notification;
      $param2 = $arrint[$param2];
      $long_Method_currentTimeMillis = staticinvoke System.currentTimeMillis();
      specialinvoke $Notification.<Notification: void <init>(int, CharSequence, long)>($param2, "\u6c7d\u8f66\u4e4b\u5bb6", $long_Method_currentTimeMillis);
      virtualinvoke $Notification.<Notification: void setLatestEventInfo(Context, CharSequence, CharSequence, PendingIntent)>($Context_Method_getGlobalContext, $param0, $param1, $PendingIntent_Method_getActivity);
      $Notification.<Notification: int defaults> = 1;
      $Notification.<Notification: int flags> = 16;
      virtualinvoke $NotificationManager.notify(2131361793, $Notification);
  }

  public static void addShortcut(Context $param0)
  {
    Intent $Intent, $Intent_1;
    String $String_Method_getString;
    Intent$ShortcutIconResource $Intent_ShortcutIconResource_Method_fromContext;
    
      $Intent = new Intent;
      specialinvoke $Intent.<Intent: void <init>(String)>("com.android.launcher.action.INSTALL_SHORTCUT");
      virtualinvoke $Intent.<Intent: Intent putExtra(String, boolean)>("duplicate", false);
      $String_Method_getString = virtualinvoke $param0.getString(2131361793);
      virtualinvoke $Intent.<Intent: Intent putExtra(String, String)>("android.intent.extra.shortcut.NAME", $String_Method_getString);
      $Intent_1 = new Intent;
      specialinvoke $Intent_1.<Intent: void <init>(Context, Class)>($param0, class "Lcom/autohome/club/ui/SplashActivity;");
      virtualinvoke $Intent.<Intent: Intent putExtra(String, Parcelable)>("android.intent.extra.shortcut.INTENT", $Intent_1);
      $Intent_ShortcutIconResource_Method_fromContext = staticinvoke Intent$ShortcutIconResource.fromContext($param0, 2130837705);
      virtualinvoke $Intent.<Intent: Intent putExtra(String, Parcelable)>("android.intent.extra.shortcut.ICON_RESOURCE", $Intent_ShortcutIconResource_Method_fromContext);
      virtualinvoke $param0.sendBroadcast($Intent);
  }

  private static void killProcess(Context $param0)
  {
    String $String, $String_1, $String_Method_readLine;
    Runtime $Runtime_Method_getRuntime;
    Process $Process_Method_exec;
    BufferedReader $BufferedReader;
    InputStreamReader $InputStreamReader;
    InputStream $InputStream_Method_getInputStream;
    StringTokenizer $StringTokenizer;
    int $int;
    boolean $z0;
    StringBuilder $StringBuilder;
    IOException $IOException;
    
      $String = virtualinvoke $param0.getPackageName();
      $String_1 = "";

  label0:
      $Runtime_Method_getRuntime = staticinvoke Runtime.getRuntime();
      $Process_Method_exec = virtualinvoke $Runtime_Method_getRuntime.exec("ps");

  label1:
      $BufferedReader = new BufferedReader;
      $InputStreamReader = new InputStreamReader;

  label2:
      $InputStream_Method_getInputStream = virtualinvoke $Process_Method_exec.getInputStream();
      specialinvoke $InputStreamReader.<InputStreamReader: void <init>(InputStream)>($InputStream_Method_getInputStream);
      specialinvoke $BufferedReader.<BufferedReader: void <init>(java.io.Reader)>($InputStreamReader);

  label3:
      $String_Method_readLine = virtualinvoke $BufferedReader.readLine();

  label4:
      if $String_Method_readLine != null goto label14;

  label5:
      virtualinvoke $BufferedReader.close();

  label6:
      $StringTokenizer = new StringTokenizer;

  label7:
      specialinvoke $StringTokenizer.<StringTokenizer: void <init>(String)>($String_Method_readLine);

  label8:
      $int = 0;

  label9:
      $z0 = virtualinvoke $StringTokenizer.hasMoreTokens();

  label10:
      if $z0 != 0 goto label16;

  label11:
      $StringBuilder = new StringBuilder;

  label12:
      specialinvoke $StringBuilder.<StringBuilder: void <init>(String)>("kill -15 ");
      $StringBuilder = virtualinvoke $StringBuilder.append($String_1);
      $String = virtualinvoke $StringBuilder.toString();
      virtualinvoke $Runtime_Method_getRuntime.<Runtime: Process exec(String)>($String);

  label13:
      return;

  label14:
      $z0 = virtualinvoke $String_Method_readLine.<String: boolean contains(CharSequence)>($String);

  label15:
      if $z0 == 0 goto label3;
      goto label5;

  label16:
      $int = $int + 1;

  label17:
      $String = virtualinvoke $StringTokenizer.nextToken();

  label18:
      $String_1 = $String;
      if $int != 2 goto label9;
      goto label11;

  label19:
      $IOException := @caughtexception;

      catch IOException from label0 to label1 with label19;
      catch IOException from label2 to label4 with label19;
      catch IOException from label5 to label6 with label19;
      catch IOException from label7 to label8 with label19;
      catch IOException from label9 to label10 with label19;
      catch IOException from label12 to label13 with label19;
      catch IOException from label14 to label15 with label19;
      catch IOException from label17 to label18 with label19;
  }

}
